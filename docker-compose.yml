version: "3.3"
volumes:
  db:
    driver:
      local
services:
  #PHP Service
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: app
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - network

  #MySQL Service
  db:
    image: mysql:8.0.22
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: minisend
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      MYSQL_USER: root
    ports:
      - "3306:3306"
    volumes:
      - ./data:/docker-entrypoint-initdb.d
      - db:/var/lib/mysql
    networks:
      - network

  #Nginx Service
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - 5000:80
    volumes:
      - ./:/var/www
      - ./touch.conf:/etc/nginx/conf.d/default.conf
    networks:
      - network

#  rabbitmq:
#    image: rabbitmq
#    environment:
#      RABBITMQ_DEFAULT_USER: guest
#      RABBITMQ_DEFAULT_PASSWORD: guest
#      RABBITMQ_DEFAULT_VHOST: /
#      RABBITMQ_SSL_CACERTFILE: /rootCA.pem
#      RABBITMQ_SSL_CERTFILE: /rootCA.pem
#      RABBITMQ_SSL_KEYFILE: /rootCA.key
#      RABBITMQ_SSL_VERIFY: verify_none
#      RABBITMQ_SSL_FAIL_IF_NO_PEER_CERT: "false"
#    volumes:
#      - "./tests/files/rootCA.pem:/rootCA.pem:ro"
#      - "./tests/files/rootCA.key:/rootCA.key:ro"
#    ports:
#      - 15671:15671
#      - 15672:15672
#      - 5671:5671
#      - 5672:5672
#    networks:
#      - network

  rabbitmq-management:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASSWORD: guest
      RABBITMQ_DEFAULT_VHOST: /
#      RABBITMQ_MANAGEMENT_SSL_CACERTFILE: /rootCA.pem
#      RABBITMQ_MANAGEMENT_SSL_CERTFILE: /rootCA.pem
#      RABBITMQ_MANAGEMENT_SSL_KEYFILE: /rootCA.key
#      RABBITMQ_MANAGEMENT_SSL_VERIFY: verify_none
#      RABBITMQ_MANAGEMENT_SSL_FAIL_IF_NO_PEER_CERT: "false"
#    volumes:
#      - "./tests/files/rootCA.pem:/rootCA.pem:ro"
#      - "./tests/files/rootCA.key:/rootCA.key:ro"
    ports:
      - 15671:15671
      - 15672:15672
      - 5671:5671
      - 5672:5672
    networks:
      - network

#Docker Networks
networks:
  network:
    driver: bridge
